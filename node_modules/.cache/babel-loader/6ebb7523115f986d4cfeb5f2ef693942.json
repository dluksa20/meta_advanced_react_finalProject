{"ast":null,"code":"var _jsxFileName = \"/Users/dovydasluksa/Documents/git/meta_advanced_react_finalProject/src/components/ContactMeSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, FormControl, FormErrorMessage, FormLabel, Heading, Input, Select, Textarea, VStack } from \"@chakra-ui/react\";\nimport * as Yup from 'yup';\nimport FullScreenSection from \"./FullScreenSection\";\nimport useSubmit from \"../hooks/useSubmit\";\nimport { useAlertContext } from \"../context/alertContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandingSection = () => {\n  _s();\n\n  const {\n    isLoading,\n    response,\n    submit\n  } = useSubmit();\n  const {\n    onOpen\n  } = useAlertContext(); // const formik = useFormik({\n  //   initialValues: {\n  //     firstName: '',\n  //     email: '',\n  //     type: '',\n  //     comment: ''\n  //   },\n  //   validationSchema: Yup.object({\n  //     firstName: Yup.string()\n  //       .min(2, 'First name must be at least 2 characters')\n  //       .required('First name is required'),\n  //     email: Yup.string()\n  //       .email('Invalid email address')\n  //       .required('Email is required'),\n  //     type: Yup.string()\n  //       .required('Please select a type of enquiry'),\n  //     comment: Yup.string()\n  //       .min(10, 'Comment must be at least 10 characters')\n  //       .required('Comment is required'),\n  //   }),\n  //   onSubmit: async (values, { resetForm }) => {\n  //     await submit(values);\n  //     if (response.type === 'success') {\n  //       onOpen('success', 'Your message was sent successfully!');\n  //       resetForm();\n  //     } else {\n  //       onOpen('error', 'There was an error sending your message.');\n  //     }\n  //   },\n  // });\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      email: '',\n      type: '',\n      comment: ''\n    },\n    onSubmit: values => {},\n    validationSchema: Yup.object({\n      firstName: Yup.string().min(2, 'First name must be at least 2 characters').required('First name is required'),\n      email: Yup.string() //       .email('Invalid email address')\n      //       .required('Email is required'),\n      //     type: Yup.string()\n      //       .required('Please select a type of enquiry'),\n      //     comment: Yup.string()\n      //       .min(10, 'Comment must be at least 10 characters')\n      //       .required('Comment is required'),\n\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(FullScreenSection, {\n    isDarkBackground: true,\n    backgroundColor: \"#512DA8\",\n    py: 16,\n    spacing: 8,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      w: \"1024px\",\n      p: 32,\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        id: \"contactme-section\",\n        children: \"Contact me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 6,\n        rounded: \"md\",\n        w: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              isInvalid: formik.touched.firstName && formik.errors.firstName,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"firstName\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"firstName\",\n                name: \"firstName\",\n                ...formik.getFieldProps('firstName')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: formik.errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isInvalid: formik.touched.email && formik.errors.email,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"email\",\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"email\",\n                name: \"email\",\n                type: \"email\",\n                ...formik.getFieldProps('email')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: formik.errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isInvalid: formik.touched.type && formik.errors.type,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"type\",\n                children: \"Type of enquiry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                id: \"type\",\n                name: \"type\",\n                ...formik.getFieldProps('type'),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"hireMe\",\n                  children: \"Freelance project proposal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"openSource\",\n                  children: \"Open source consultancy session\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isInvalid: formik.touched.comment && formik.errors.comment,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"comment\",\n                children: \"Your message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n                id: \"comment\",\n                name: \"comment\",\n                height: 250,\n                ...formik.getFieldProps('comment')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              colorScheme: \"purple\",\n              width: \"full\",\n              isLoading: isLoading,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LandingSection, \"cnQg8i7J1tkbbSaO2RR8YZfGp8k=\", false, function () {\n  return [useSubmit, useAlertContext, useFormik];\n});\n\n_c = LandingSection;\nexport default LandingSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingSection\");","map":{"version":3,"names":["React","useEffect","useFormik","Box","Button","FormControl","FormErrorMessage","FormLabel","Heading","Input","Select","Textarea","VStack","Yup","FullScreenSection","useSubmit","useAlertContext","LandingSection","isLoading","response","submit","onOpen","formik","initialValues","firstName","email","type","comment","onSubmit","values","validationSchema","object","string","min","required","touched","errors","getFieldProps"],"sources":["/Users/dovydasluksa/Documents/git/meta_advanced_react_finalProject/src/components/ContactMeSection.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Heading,\n  Input,\n  Select,\n  Textarea,\n  VStack,\n} from \"@chakra-ui/react\";\nimport * as Yup from 'yup';\nimport FullScreenSection from \"./FullScreenSection\";\nimport useSubmit from \"../hooks/useSubmit\";\nimport {useAlertContext} from \"../context/alertContext\";\n\nconst LandingSection = () => {\n  const {isLoading, response, submit} = useSubmit();\n  const { onOpen } = useAlertContext();\n\n  // const formik = useFormik({\n  //   initialValues: {\n  //     firstName: '',\n  //     email: '',\n  //     type: '',\n  //     comment: ''\n  //   },\n  //   validationSchema: Yup.object({\n  //     firstName: Yup.string()\n  //       .min(2, 'First name must be at least 2 characters')\n  //       .required('First name is required'),\n  //     email: Yup.string()\n  //       .email('Invalid email address')\n  //       .required('Email is required'),\n  //     type: Yup.string()\n  //       .required('Please select a type of enquiry'),\n  //     comment: Yup.string()\n  //       .min(10, 'Comment must be at least 10 characters')\n  //       .required('Comment is required'),\n  //   }),\n\n  //   onSubmit: async (values, { resetForm }) => {\n  //     await submit(values);\n  //     if (response.type === 'success') {\n  //       onOpen('success', 'Your message was sent successfully!');\n  //       resetForm();\n  //     } else {\n  //       onOpen('error', 'There was an error sending your message.');\n  //     }\n  //   },\n  // });\n\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      email: '',\n      type: '',\n      comment: ''},\n    onSubmit: (values) => {},\n    validationSchema: Yup.object({\n      firstName: Yup.string()\n        .min(2, 'First name must be at least 2 characters')\n        .required('First name is required'),\n      email: Yup.string()\n  //       .email('Invalid email address')\n  //       .required('Email is required'),\n  //     type: Yup.string()\n  //       .required('Please select a type of enquiry'),\n  //     comment: Yup.string()\n  //       .min(10, 'Comment must be at least 10 characters')\n  //       .required('Comment is required'),\n    }),\n  });\n\n  return (\n    <FullScreenSection\n      isDarkBackground\n      backgroundColor=\"#512DA8\"\n      py={16}\n      spacing={8}\n    >\n      <VStack w=\"1024px\" p={32} alignItems=\"flex-start\">\n        <Heading as=\"h1\" id=\"contactme-section\">\n          Contact me\n        </Heading>\n        <Box p={6} rounded=\"md\" w=\"100%\">\n\n          <form>\n            <VStack spacing={4}>\n              <FormControl isInvalid={formik.touched.firstName && formik.errors.firstName}>\n                <FormLabel htmlFor=\"firstName\">Name</FormLabel>\n                <Input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  {...formik.getFieldProps('firstName')}\n                />\n                <FormErrorMessage>{formik.errors.firstName}</FormErrorMessage>\n              </FormControl>\n\n              <FormControl isInvalid={formik.touched.email && formik.errors.email}>\n                <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                <Input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  {...formik.getFieldProps('email')}\n                />\n                <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\n              </FormControl>\n\n              <FormControl isInvalid={formik.touched.type && formik.errors.type}>\n                <FormLabel htmlFor=\"type\">Type of enquiry</FormLabel>\n                <Select id=\"type\"\n                        name=\"type\"\n                        {...formik.getFieldProps('type')}\n                        >\n                  <option value=\"hireMe\">Freelance project proposal</option>\n                  <option value=\"openSource\">\n                    Open source consultancy session\n                  </option>\n                  <option value=\"other\">Other</option>\n                </Select>\n              </FormControl>\n\n              <FormControl isInvalid={formik.touched.comment && formik.errors.comment}>\n                <FormLabel htmlFor=\"comment\">Your message</FormLabel>\n                <Textarea\n                  id=\"comment\"\n                  name=\"comment\"\n                  height={250}\n                  {...formik.getFieldProps('comment')}\n                />\n                <FormErrorMessage></FormErrorMessage>\n              </FormControl>\n\n              <Button type=\"submit\" colorScheme=\"purple\" width=\"full\" isLoading={isLoading}>\n                Submit\n              </Button>\n            </VStack>\n          </form>\n        </Box>\n      </VStack>\n    </FullScreenSection>\n  );\n};\n\nexport default LandingSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}